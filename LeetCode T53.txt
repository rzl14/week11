class Solution {
public:
    // struct qujian {
    //     int lmax, rmax, sum, max;
    // } ;
    // qujian get(vector<int>& nums, int l, int r) {
    //     if (l >= r) return (qujian) {nums[r], nums[r], nums[r], nums[r]};
    //     int mid = l + r >> 1;
    //     //cout << mid << "  " << l << "  " << r << endl;
    //     qujian ll = get(nums, l, mid);
    //     qujian rr = get(nums, mid + 1, r);
    //     return (qujian) {max(ll.lmax, ll.sum + rr.lmax), max(rr.rmax, rr.sum + ll.rmax), ll.sum + rr.sum, max(max(ll.max, rr.max), ll.rmax + rr.lmax)};
    // }
    int maxSubArray(vector<int>& nums) {
        int ans = nums[0];
        for (int i = 1; i < nums.size(); i ++) {
            if (0 < nums[i - 1]) nums[i] += nums[i - 1];
            if (ans < nums[i]) ans = nums[i];
        }
        return ans;
        // return get(nums, 0, nums.size() - 1).max;
    }
};