class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        ans.reserve(128);
        int n = nums.size();
        sort(nums.begin(), nums.end());
        if (nums[n - 1] < 0) return ans;
        if (nums[n / 2] >= 0)
        for (int i = 0; i < n; i ++) {
            if (nums[i] > 0) return ans;
            while (i < n && (i != 0 && nums[i] == nums[i - 1])) i ++;
            int j = i + 1, k = n - 1;
            while (j < k) {
                int t = nums[i] + nums[j] + nums[k];
                if (t > 0) {
                    k --;
                    while (j < k && nums[k] == nums[k + 1]) k --;
                }
                else if (t < 0) {
                    j ++;
                    while (j < k && nums[j] == nums[j - 1]) j ++;
                }
                else {
                    ans.push_back({nums[i], nums[j], nums[k]});
                    j ++, k --;
                    while (j < k && nums[j] == nums[j - 1]) j ++;
                    while (j < k && nums[k] == nums[k + 1]) k --;
                }
            }
        }
        else 
        for (int i = n - 1; i > 2; i --) {
            if (nums[i] < 0) return ans;
            while (i > 2 && (i != n - 1 && nums[i] == nums[i + 1])) i --;
            int j = i - 1, k = 0;
            while (j > k) {
                int t = nums[i] + nums[j] + nums[k];
                if (t > 0) {
                    j --;
                    while (j > k && nums[j] == nums[j + 1]) j --;
                }
                else if (t < 0) {
                    k ++;
                    while (j > k && nums[k] == nums[k - 1]) k ++;
                }
                else {
                    ans.push_back({nums[i], nums[j], nums[k]});
                    j --, k ++;
                    while (j > k && nums[j] == nums[j + 1]) j --;
                    while (j > k && nums[k] == nums[k - 1]) k ++;
                }
            }
        }
        return ans;
    }
};