class Solution {
public:
    int next[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}, ne = 0;
    bool find(vector<string>& plate, int x, int y, int ne, int t) {
        for (; x >= 0 && x < plate.size() && y >= 0 && y <= plate[0].size() && t > 0;) {
            t --;
            if (plate[x][y] == 'W') ne = ne == 3 ? 0 : ne + 1;
            else if (plate[x][y] == 'E') ne = ne ? ne - 1 : 3;
            else if (plate[x][y] == 'O') return true;
            x += next[ne][0];
            y += next[ne][1];
        }
        if (x >= 0 && x < plate.size() && y >= 0 && y <= plate[0].size())
        return plate[x][y] == 'O';
        return false;
    }
    vector<vector<int>> ballGame(int num, vector<string>& plate) {
        int x = 0, y = 0;
        vector<vector<int>> ans;
        for (x = 0, y = 1, ne = 0; y + 1 < plate[0].size(); y ++) {
            if (plate[x][y] == '.' && find(plate, x, y, ne, num)) ans.push_back({x, y});
        }
        for (y = 0, x = 1, ne = 1; x + 1 < plate.size(); x ++) {
            if (plate[x][y] == '.' && find(plate, x, y, ne, num)) ans.push_back({x, y});
        }
        for (x = plate.size() - 1, y = 1, ne = 2; y + 1 < plate[0].size(); y ++) {
            if (plate[x][y] == '.' && find(plate, x, y, ne, num)) ans.push_back({x, y});
        }
        for (y = plate[0].size() - 1, x = 1, ne = 3; x + 1 < plate.size(); x ++) {
            if (plate[x][y] == '.' && find(plate, x, y, ne, num)) ans.push_back({x, y});
        }
        return ans;
    }
};